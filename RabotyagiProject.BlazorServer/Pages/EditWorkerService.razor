@page "/EWS/{WorkerId:int}/{Id:int}"
@inject NavigationManager Navigator

<div class="Update-Button">
    <EditForm Model="@_updatedService" OnSubmit="@Back">
        <h3> Предоставляет услугу: @_updatedService.Type </h3>
        Цена услуги: <input type="text" @bind="_updatedService.Cost" name="Cost" placeholder="@_updatedService.Cost" 
                            style="background-color: rgba(238,221,255,0.8); border: 3px solid rgba(121,34,204,0.8);
                                   border-radius: 15px; text-align: center; color: indigo"><br />
        <InputRadioGroup @bind-Value="_updatedService.IsDeleted">
            <InputRadio Value="true" style="vertical-align:middle; margin:0; outline: 0" /> БОЛЬШЕ НЕ ПРЕДОСТАВЛЯЕТ
            <InputRadio Value="false" style="vertical-align:middle; margin:0; outline: 0" checked /> ВСЁ В СИЛЕ...
        </InputRadioGroup> <br/>
        <button class="Accept-Button" @onclick="Confirm">Принять изменения</button>
        <button class="Accept-Button" type="submit"><a href="/worker/@WorkerId" style="color:indigo;"> ГАЛЯ, ОТМЕНА! </a></button>
    </EditForm>
</div>

@code {
    [Parameter] public int WorkerId { get; set; }
    [Parameter] public int Id { get; set; }
    private WorkerOutputModel _worker;
    private readonly ServiceInputModel _updatedService =new();

    protected override void OnInitialized()
    {
        _worker = new WorkerManager().GetWorkerById(WorkerId);
        var service = _worker.Service.Find(x => x.Id == Id);
        _updatedService.Id = service.Id;
        _updatedService.Type = service.Type;
        _updatedService.Cost = service.Cost;
        _updatedService.IsDeleted = service.IsDeleted;
    }

    private void Confirm()
    {
        new WorkerManager().UpdateWorkerService(WorkerId, _updatedService);
        Back();
    }

    private void Back()
    {
        Navigator.NavigateTo($"/worker/{WorkerId}", true);
    }
}